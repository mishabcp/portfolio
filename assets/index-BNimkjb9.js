import{i as u,a as _,e as g,l as D,_ as T}from"./index-XgrrP6Ri.js";const h=2,d=.5;function O(r){const{context:e,particle:t,radius:n,opacity:i}=r,a=t.shapeData;if(!a)return;const l=a.value;if(l===void 0)return;t.text===void 0&&(t.text=u(l,t.randomIndexData));const o=t.text,c=a.style??"",x=a.weight??"400",w=Math.round(n)*h,y=a.font??"Verdana",m=t.shapeFill,p=o==null?void 0:o.split(`
`);if(p){e.font=`${c} ${x} ${w}px "${y}"`,e.globalAlpha=i;for(let f=0;f<p.length;f++)v(e,p[f],n,i,f,m);e.globalAlpha=1}}function v(r,e,t,n,i,a){const l=e.length*t*d,o={x:-l,y:t*d},c=t*h;a?r.fillText(e,o.x,o.y+c*i):r.strokeText(e,o.x,o.y+c*i)}const s=["text","character","char","multiline-text"];class b{draw(e){O(e)}async init(e){const t=e.actualOptions;if(s.find(n=>_(n,t.particles.shape.type))){const n=s.map(a=>t.particles.shape.options[a]).find(a=>!!a),i=[];g(n,a=>{i.push(D(a.font,a.weight))}),await Promise.all(i)}}particleInit(e,t){if(!t.shape||!s.includes(t.shape))return;const n=t.shapeData;if(n===void 0)return;const i=n.value;i!==void 0&&(t.text=u(i,t.randomIndexData))}}const S=Object.freeze(Object.defineProperty({__proto__:null,TextDrawer:b,validTypes:s},Symbol.toStringTag,{value:"Module"}));async function P(r,e=!0){const{TextDrawer:t}=await T(async()=>{const{TextDrawer:n}=await Promise.resolve().then(()=>S);return{TextDrawer:n}},void 0);await r.addShape(s,new t,e)}export{P as loadTextShape};
